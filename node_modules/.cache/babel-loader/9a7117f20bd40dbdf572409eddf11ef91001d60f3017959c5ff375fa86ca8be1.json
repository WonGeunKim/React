{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kwg47\\\\Desktop\\\\React\\\\react-starting-setup\\\\src\\\\App.js\";\nimport ExpenseItem from \"./components/ExpenseItem\";\n// 파일 import\n// => 이것을 html 요소처럼 사용할 수 있다는 것\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // 이것이 일반적인 자바스크립트에서 작업하는 방식 - 명령적 접근 방식\n  // const para = document.createElement('p');\n  // para.textContent = 'This is also Visible';\n  // document.getElementById('root').append(para);\n\n  // 리액트로 작업하면 단지 <div> <h2> 태그와 단락들이 있는 최종상태를 정의하기만 하면\n  // 리액트는 이런 것들을 화면에 불러오기 위한 지시사항들을 뒷단에 생성\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is also Visible!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ExpenseItem","App"],"sources":["C:/Users/kwg47/Desktop/React/react-starting-setup/src/App.js"],"sourcesContent":["import ExpenseItem from \"./components/ExpenseItem\";\n// 파일 import\n// => 이것을 html 요소처럼 사용할 수 있다는 것\n\n\nfunction App() {\n\n  // 이것이 일반적인 자바스크립트에서 작업하는 방식 - 명령적 접근 방식\n  // const para = document.createElement('p');\n  // para.textContent = 'This is also Visible';\n  // document.getElementById('root').append(para);\n\n  // 리액트로 작업하면 단지 <div> <h2> 태그와 단락들이 있는 최종상태를 정의하기만 하면\n  // 리액트는 이런 것들을 화면에 불러오기 위한 지시사항들을 뒷단에 생성\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      <p>This is also Visible!</p>\n\n      {/* html 요소처럼 사용 */}\n      <ExpenseItem></ExpenseItem>\n      {/* 리액트는 이런식으로 사용자 지정 컴포넌트를 감지할 수 있음 */}\n      {/* 소문자로 시작하는 요소는 내장된 html 요소 */}\n      {/* 대문자로 시작하는 요소는 개발자들에 의해 정의된 요소 => 사용자 지정 컴포넌트 */}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAClD;AACA;AAAA;AAGA,SAASC,GAAG,GAAG;EAEb;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3B;MAAA,UAAG;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAI,eAG5B,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QAKvB;AAEV;AAAC,KAtBQA,GAAG;AAwBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}